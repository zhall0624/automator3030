/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IncomingwebhooksImport } from './routes/incoming_webhooks'
import { Route as IndexImport } from './routes/index'
import { Route as WorkflowsIndexImport } from './routes/workflows.index'
import { Route as WorkflowsIdImport } from './routes/workflows.$id'

// Create/Update Routes

const IncomingwebhooksRoute = IncomingwebhooksImport.update({
  path: '/incoming_webhooks',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WorkflowsIndexRoute = WorkflowsIndexImport.update({
  path: '/workflows/',
  getParentRoute: () => rootRoute,
} as any)

const WorkflowsIdRoute = WorkflowsIdImport.update({
  path: '/workflows/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/incoming_webhooks': {
      preLoaderRoute: typeof IncomingwebhooksImport
      parentRoute: typeof rootRoute
    }
    '/workflows/$id': {
      preLoaderRoute: typeof WorkflowsIdImport
      parentRoute: typeof rootRoute
    }
    '/workflows/': {
      preLoaderRoute: typeof WorkflowsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  IncomingwebhooksRoute,
  WorkflowsIdRoute,
  WorkflowsIndexRoute,
])

/* prettier-ignore-end */
